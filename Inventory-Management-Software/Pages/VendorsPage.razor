@page "/vendors"
@using Inventory_Management_Software.Core.Entities
@using Inventory_Management_Software.Core.Interfaces
@using Inventory_Management_Software.Infrastructure.Repository
@using Inventory_Management_Software.Pages.Dialogs

@inject IEfRepository<Vendor> VendorRepository
@inject IDialogService DialogService

<h3>VendorsPage</h3>


<MudPaper Class="d-flex mb-2 justify-end flex-grow-1 gap-4" Elevation="0">
    <MudButton Variant="Variant.Outlined" OnClick="@(AddVendor)">Vendor</MudButton>
</MudPaper>
<MudTable Items="@Elements" @bind-SelectedItem="@_selectedItem">
    <HeaderContent>
        <MudTh>
            SKU
        </MudTh>
        <MudTh>
            Name
        </MudTh>
        <MudTh>
            Description
        </MudTh>
    </HeaderContent>
    
    <RowTemplate>
        <MudTd DataLabel="SKU">
            @context.Name
        </MudTd>
        <MudTd>
            @context.Website
        </MudTd>
        <MudTh>
            @context.Description
        </MudTh>
    </RowTemplate>

</MudTable>


@code {
    
    private Vendor _selectedItem;
    private IEnumerable<Vendor> Elements { get; set; } = new List<Vendor>();
    
    protected override async Task OnInitializedAsync()
    {
        Elements = await VendorRepository.ListAllAsync();
    }
    
    private async Task AddVendor()
    {
        var dialog = await DialogService.ShowAsync < AddVendorDialog>("Add Vendor");
        var newProduct = await dialog.Result;

        if (newProduct != null)
        {
            Elements = await VendorRepository.ListAllAsync();
            StateHasChanged();
        }
        
    }
    
    

}